"""all employee_asssign_request_id

Revision ID: 25bfc8e22004
Revises: fed966beeec4
Create Date: 2025-06-02 06:28:19.818103

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql
import sqlmodel
# revision identifiers, used by Alembic.
revision: str = '25bfc8e22004'
down_revision: Union[str, None] = 'fed966beeec4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assign_request_remark',
    sa.Column('admin_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('employee_id_from', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('employee_id_to', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('employee_asssign_request_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('remark', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('employee_files', 'image_path',
               existing_type=mysql.LONGBLOB(),
               type_=sa.LargeBinary(length=4294967295),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('employee_files', 'image_path',
               existing_type=sa.LargeBinary(length=4294967295),
               type_=mysql.LONGBLOB(),
               existing_nullable=True)
    op.drop_table('assign_request_remark')
    # ### end Alembic commands ###
